(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[977],{2196:(e,n,t)=>{Promise.resolve().then(t.bind(t,2882))},2882:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>u});var s=t(5155),r=t(2115);let o=()=>{let[e,n]=(0,r.useState)(0),[t,o]=(0,r.useState)(0),[a,l]=(0,r.useState)(null);return(0,r.useEffect)(()=>{n(window.innerWidth);let e=()=>n(window.innerWidth);return window.addEventListener("resize",e),()=>window.removeEventListener("resize",e)},[]),(0,r.useEffect)(()=>{document.title="Count is ".concat(t)},[t]),(0,r.useEffect)(()=>{(async()=>{try{let e=await fetch("https://api.github.com/users/gsalunke"),n=await e.json();l(n.name)}catch(e){console.error("Error fetching data:",e)}})()},[]),(0,s.jsxs)("div",{className:"example-container",children:[(0,s.jsx)("h2",{children:"useEffect Example"}),(0,s.jsxs)("div",{className:"window-width-section",children:[(0,s.jsxs)("p",{children:["Window width: ",e,"px"]}),(0,s.jsx)("p",{children:"Try resizing your window!"})]}),(0,s.jsxs)("div",{className:"counter-section",children:[(0,s.jsxs)("p",{children:["Count: ",t]}),(0,s.jsx)("button",{onClick:()=>o(e=>e+1),children:"Increment (Check the page title!)"})]}),(0,s.jsx)("div",{className:"data-section",children:(0,s.jsxs)("p",{children:["GitHub User Data: ",a||"Loading..."]})})]})};function a(e,n){let[t,s]=(0,r.useState)(n);return(0,r.useEffect)(()=>{try{let n=window.localStorage.getItem(e);n&&s(JSON.parse(n))}catch(e){console.log(e)}},[e,n]),[t,n=>{try{let r=n instanceof Function?n(t):n;s(r),window.localStorage.setItem(e,JSON.stringify(r))}catch(e){console.log(e)}}]}let l=()=>{let[e,n]=a("user-name",""),[t,o]=a("search-term",""),l=function(e,n){let[t,s]=(0,r.useState)(e);return(0,r.useEffect)(()=>{let n=setTimeout(()=>{s(e)},500);return()=>{clearTimeout(n)}},[e,500]),t}(t,500);return(0,s.jsxs)("div",{className:"example-container",children:[(0,s.jsx)("h2",{children:"Custom Hooks Example"}),(0,s.jsxs)("div",{className:"local-storage-section",children:[(0,s.jsx)("h3",{children:"useLocalStorage Hook"}),(0,s.jsx)("input",{type:"text",value:e,onChange:e=>n(e.target.value),placeholder:"Enter your name"}),(0,s.jsxs)("p",{children:["Your name (",e,") is saved in localStorage. Try refreshing the page!"]})]}),(0,s.jsxs)("div",{className:"debounce-section",children:[(0,s.jsx)("h3",{children:"useDebounce Hook"}),(0,s.jsx)("input",{type:"text",value:t,onChange:e=>o(e.target.value),placeholder:"Type to search..."}),(0,s.jsxs)("p",{children:["Immediate value: ",t,(0,s.jsx)("br",{}),"Debounced value: ",l]})]})]})},c=(0,r.createContext)(void 0),i=e=>{let{children:n}=e,[t,o]=(0,r.useState)("light");return(0,s.jsx)(c.Provider,{value:{theme:t,toggleTheme:()=>{o(e=>"light"===e?"dark":"light")}},children:n})},d=()=>{let e=(0,r.useContext)(c);if(void 0===e)throw Error("useTheme must be used within a ThemeProvider");return e};function u(){return(0,s.jsx)(i,{children:(0,s.jsxs)("div",{className:"p-8",children:[(0,s.jsx)("h1",{className:"text-3xl font-bold mb-8",children:"React Hooks Examples"}),(0,s.jsxs)("div",{className:"space-y-12",children:[(0,s.jsxs)("section",{className:"border rounded-lg overflow-hidden",children:[(0,s.jsx)("h2",{className:"text-xl font-semibold p-4 bg-gray-50 border-b",children:"useState Hook"}),(0,s.jsxs)("div",{className:"grid grid-cols-2",children:[(0,s.jsx)("div",{className:"p-4 border-r",children:(0,s.jsxs)("div",{className:"mb-4",children:[(0,s.jsx)("h3",{className:"font-semibold mb-2",children:"Interactive Example"}),(0,s.jsx)(h,{})]})}),(0,s.jsxs)("div",{className:"p-4 bg-gray-50",children:[(0,s.jsx)("h3",{className:"font-semibold mb-2",children:"Code"}),(0,s.jsx)("div",{className:"overflow-auto max-h-[300px]",children:(0,s.jsx)("pre",{className:"text-sm",children:'function Counter() {\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState("");\n\n  return (\n    <div className="space-y-4">\n      <div>\n        <p>Count: {count}</p>\n        <button\n          onClick={() => setCount(count + 1)}\n          className="bg-blue-500 text-white px-4 py-2 rounded"\n        >\n          Increment\n        </button>\n      </div>\n      \n      <div>\n        <input\n          type="text"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          className="border p-2 rounded"\n          placeholder="Type something..."\n        />\n        <p>You typed: {text}</p>\n      </div>\n    </div>\n  );\n}'})})]})]})]}),(0,s.jsxs)("section",{className:"border rounded-lg overflow-hidden",children:[(0,s.jsx)("h2",{className:"text-xl font-semibold p-4 bg-gray-50 border-b",children:"useEffect Hook"}),(0,s.jsxs)("div",{className:"grid grid-cols-2",children:[(0,s.jsx)("div",{className:"p-4 border-r",children:(0,s.jsx)(o,{})}),(0,s.jsxs)("div",{className:"p-4 bg-gray-50",children:[(0,s.jsx)("h3",{className:"font-semibold mb-2",children:"Code"}),(0,s.jsx)("div",{className:"overflow-auto max-h-[300px]",children:(0,s.jsx)("pre",{className:"text-sm",children:"function UseEffectExample() {\n  const [count, setCount] = useState(0);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Effect that runs on mount\n  useEffect(() => {\n    console.log('Component mounted');\n    return () => console.log('Component will unmount');\n  }, []);\n\n  // Effect that runs when count changes\n  useEffect(() => {\n    console.log('Count changed to:', count);\n    document.title = `Count: ${count}`;\n  }, [count]);\n\n  // Effect with cleanup (simulating API call)\n  useEffect(() => {\n    let mounted = true;\n    \n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch('https://api.example.com/data');\n        const json = await response.json();\n        if (mounted) {\n          setData(json);\n          setLoading(false);\n        }\n      } catch (error) {\n        if (mounted) {\n          console.error('Error:', error);\n          setLoading(false);\n        }\n      }\n    };\n\n    fetchData();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <div>\n      <h3>Count: {count}</h3>\n      <button onClick={() => setCount(c => c + 1)}>\n        Increment\n      </button>\n      \n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      )}\n    </div>\n  );\n}"})})]})]})]}),(0,s.jsxs)("section",{className:"border rounded-lg overflow-hidden",children:[(0,s.jsx)("h2",{className:"text-xl font-semibold p-4 bg-gray-50 border-b",children:"useContext Hook"}),(0,s.jsxs)("div",{className:"grid grid-cols-2",children:[(0,s.jsx)("div",{className:"p-4 border-r",children:(0,s.jsx)(m,{})}),(0,s.jsxs)("div",{className:"p-4 bg-gray-50",children:[(0,s.jsx)("h3",{className:"font-semibold mb-2",children:"Code"}),(0,s.jsx)("div",{className:"overflow-auto max-h-[300px]",children:(0,s.jsx)("pre",{className:"text-sm",children:"// ThemeContext.tsx\nimport { createContext, useContext, useState } from 'react';\n\ntype Theme = 'light' | 'dark';\n\ninterface ThemeContextType {\n  theme: Theme;\n  toggleTheme: () => void;\n}\n\nexport const ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState<Theme>('light');\n\n  const toggleTheme = () => {\n    setTheme(prev => prev === 'light' ? 'dark' : 'light');\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within ThemeProvider');\n  }\n  return context;\n};\n\n// ThemeExample Component\nfunction ThemeExample() {\n  const { theme, toggleTheme } = useTheme();\n\n  return (\n    <div className={theme === 'dark' ? 'bg-gray-800 text-white' : 'bg-white text-gray-800'}>\n      <div className=\"p-4 rounded-lg border\">\n        <h3 className=\"font-semibold mb-4\">Current Theme: {theme}</h3>\n        <button\n          onClick={toggleTheme}\n          className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n        >\n          Toggle Theme\n        </button>\n        <div className=\"mt-4\">\n          <p>This component uses the theme context</p>\n          <p>Try toggling the theme!</p>\n        </div>\n      </div>\n    </div>\n  );\n}"})})]})]})]}),(0,s.jsxs)("section",{className:"border rounded-lg overflow-hidden",children:[(0,s.jsx)("h2",{className:"text-xl font-semibold p-4 bg-gray-50 border-b",children:"Custom Hook: useDebounce"}),(0,s.jsxs)("div",{className:"grid grid-cols-2",children:[(0,s.jsx)("div",{className:"p-4 border-r",children:(0,s.jsx)(l,{})}),(0,s.jsxs)("div",{className:"p-4 bg-gray-50",children:[(0,s.jsx)("h3",{className:"font-semibold mb-2",children:"Code"}),(0,s.jsx)("div",{className:"overflow-auto max-h-[300px]",children:(0,s.jsx)("pre",{className:"text-sm",children:'// useDebounce.ts\nfunction useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\n// CustomHookExample.tsx\nfunction CustomHookExample() {\n  const [searchTerm, setSearchTerm] = useState("");\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\n  const [results, setResults] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      // Simulate API call\n      const searchResults = [\n        `Result 1 for "${debouncedSearchTerm}"`,\n        `Result 2 for "${debouncedSearchTerm}"`,\n        `Result 3 for "${debouncedSearchTerm}"`\n      ];\n      setResults(searchResults);\n    } else {\n      setResults([]);\n    }\n  }, [debouncedSearchTerm]);\n\n  return (\n    <div className="space-y-4">\n      <div>\n        <input\n          type="text"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          placeholder="Search..."\n          className="border p-2 rounded"\n        />\n      </div>\n      \n      <div>\n        <h4>Search Results:</h4>\n        {results.length > 0 ? (\n          <ul className="list-disc pl-5">\n            {results.map((result, index) => (\n              <li key={index}>{result}</li>\n            ))}\n          </ul>\n        ) : (\n          <p>No results</p>\n        )}\n      </div>\n    </div>\n  );\n}'})})]})]})]})]})]})})}function h(){let[e,n]=(0,r.useState)(0),[t,o]=(0,r.useState)("");return(0,s.jsxs)("div",{className:"space-y-4",children:[(0,s.jsxs)("div",{children:[(0,s.jsxs)("p",{children:["Count: ",e]}),(0,s.jsx)("button",{onClick:()=>n(e+1),className:"bg-blue-500 text-white px-4 py-2 rounded",children:"Increment"})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("input",{type:"text",value:t,onChange:e=>o(e.target.value),className:"border p-2 rounded",placeholder:"Type something..."}),(0,s.jsxs)("p",{children:["You typed: ",t]})]})]})}function m(){let{theme:e,toggleTheme:n}=d();return(0,s.jsx)("div",{className:"dark"===e?"bg-gray-800 text-white":"bg-white text-gray-800",children:(0,s.jsxs)("div",{className:"p-4 rounded-lg border",children:[(0,s.jsxs)("h3",{className:"font-semibold mb-4",children:["Current Theme: ",e]}),(0,s.jsx)("button",{onClick:n,className:"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600",children:"Toggle Theme"}),(0,s.jsxs)("div",{className:"mt-4",children:[(0,s.jsx)("p",{children:"This component uses the theme context"}),(0,s.jsx)("p",{children:"Try toggling the theme!"})]})]})})}}},e=>{var n=n=>e(e.s=n);e.O(0,[441,684,358],()=>n(2196)),_N_E=e.O()}]);