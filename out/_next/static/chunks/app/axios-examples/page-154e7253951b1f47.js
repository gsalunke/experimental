(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[97],{784:(e,s,t)=>{"use strict";t.r(s),t.d(s,{default:()=>a});var n=t(5155),o=t(2115),r=t(3464);let a=()=>{let[e,s]=(0,o.useState)(""),[t,a]=(0,o.useState)(!1),[l,c]=(0,o.useState)(null),i=async()=>{a(!0),c(null);try{let e=await r.A.get("https://jsonplaceholder.typicode.com/posts/1"),t=await r.A.get("https://jsonplaceholder.typicode.com/posts/".concat(e.data.id,"/comments")),n={post:e.data,comments:t.data};s(JSON.stringify(n,null,2))}catch(e){c(e instanceof Error?e.message:"An error occurred")}finally{a(!1)}};return(0,n.jsxs)("div",{className:"container mx-auto px-4 py-8",children:[(0,n.jsx)("h1",{className:"text-3xl font-bold mb-6",children:"Axios Examples with Promise Handling"}),(0,n.jsxs)("div",{className:"grid gap-6",children:[(0,n.jsxs)("section",{className:"p-4 bg-white rounded-lg shadow",children:[(0,n.jsx)("h2",{className:"text-xl font-semibold mb-4",children:"REST API Examples"}),(0,n.jsx)("p",{className:"text-gray-600 mb-4",children:"Using JSONPlaceholder API to demonstrate different HTTP methods with Axios"}),(0,n.jsxs)("div",{className:"grid gap-4",children:[(0,n.jsxs)("div",{className:"flex flex-wrap gap-4",children:[(0,n.jsx)("button",{onClick:()=>{a(!0),c(null),r.A.get("https://jsonplaceholder.typicode.com/posts/1").then(e=>{s(JSON.stringify(e.data,null,2))}).catch(e=>{c(e.message)}).finally(()=>{a(!1)})},className:"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600",children:"GET Request"}),(0,n.jsx)("button",{onClick:()=>{a(!0),c(null),r.A.post("https://jsonplaceholder.typicode.com/posts",{title:"New Post Title",body:"This is the content of the new post",userId:1}).then(e=>{s(JSON.stringify(e.data,null,2))}).catch(e=>{c(e.message)}).finally(()=>{a(!1)})},className:"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600",children:"POST Request"}),(0,n.jsx)("button",{onClick:()=>{a(!0),c(null),r.A.put("https://jsonplaceholder.typicode.com/posts/1",{id:1,title:"Updated Post Title",body:"This is the updated content of the post",userId:1}).then(e=>{s(JSON.stringify(e.data,null,2))}).catch(e=>{c(e.message)}).finally(()=>{a(!1)})},className:"bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600",children:"PUT Request"}),(0,n.jsx)("button",{onClick:()=>{a(!0),c(null),r.A.delete("https://jsonplaceholder.typicode.com/posts/1").then(e=>{s("Post deleted successfully!\n"+JSON.stringify(e.data,null,2))}).catch(e=>{c(e.message)}).finally(()=>{a(!1)})},className:"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600",children:"DELETE Request"}),(0,n.jsx)("button",{onClick:()=>{a(!0),c(null),Promise.all([r.A.get("https://jsonplaceholder.typicode.com/posts/1"),r.A.get("https://jsonplaceholder.typicode.com/posts/2"),r.A.get("https://jsonplaceholder.typicode.com/posts/3")]).then(e=>{s(JSON.stringify(e.map(e=>e.data),null,2))}).catch(e=>{c(e.message)}).finally(()=>{a(!1)})},className:"bg-purple-500 text-white px-4 py-2 rounded hover:bg-purple-600",children:"Multiple Requests"}),(0,n.jsx)("button",{onClick:i,className:"bg-indigo-500 text-white px-4 py-2 rounded hover:bg-indigo-600",children:"Async/Await Example"})]}),t&&(0,n.jsx)("div",{className:"text-blue-500",children:"Loading..."}),l&&(0,n.jsxs)("div",{className:"text-red-500 bg-red-50 p-4 rounded",children:["Error: ",l]}),e&&(0,n.jsx)("div",{className:"bg-gray-50 p-4 rounded-lg",children:(0,n.jsx)("pre",{className:"whitespace-pre-wrap overflow-auto max-h-[400px]",children:e})})]})]}),(0,n.jsxs)("section",{className:"p-4 bg-white rounded-lg shadow",children:[(0,n.jsx)("h2",{className:"text-xl font-semibold mb-4",children:"Vanilla JavaScript Examples (Try in Console)"}),(0,n.jsx)("div",{className:"grid gap-4",children:(0,n.jsxs)("div",{children:[(0,n.jsx)("h3",{className:"font-semibold mb-2",children:"Using Fetch API"}),(0,n.jsx)("pre",{className:"bg-gray-50 p-4 rounded-lg text-sm",children:"// Basic GET Request\nasync function fetchData() {\n  try {\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts/1');\n    const data = await response.json();\n    console.log('GET Result:', data);\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\n\n// POST Request\nasync function createPost() {\n  try {\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: 'New Post',\n        body: 'This is a new post',\n        userId: 1\n      })\n    });\n    const data = await response.json();\n    console.log('POST Result:', data);\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\n\n// PUT Request\nasync function updatePost() {\n  try {\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts/1', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: 1,\n        title: 'Updated Post',\n        body: 'This post has been updated',\n        userId: 1\n      })\n    });\n    const data = await response.json();\n    console.log('PUT Result:', data);\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\n\n// DELETE Request\nasync function deletePost() {\n  try {\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts/1', {\n      method: 'DELETE'\n    });\n    console.log('DELETE Status:', response.status);\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\n\n// Multiple Requests with Promise.all\nasync function multipleRequests() {\n  try {\n    const urls = [\n      'https://jsonplaceholder.typicode.com/posts/1',\n      'https://jsonplaceholder.typicode.com/posts/2',\n      'https://jsonplaceholder.typicode.com/posts/3'\n    ];\n    \n    const promises = urls.map(url => fetch(url).then(res => res.json()));\n    const results = await Promise.all(promises);\n    console.log('Multiple Requests Results:', results);\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\n\n// Error Handling with Async/Await\nasync function handleErrors() {\n  try {\n    const response = await fetch('https://jsonplaceholder.typicode.com/invalid');\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    console.log('Data:', data);\n  } catch (error) {\n    console.error('Error caught:', error.message);\n  }\n}\n\n// Using XMLHttpRequest (Old School)\nfunction oldSchoolRequest() {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', 'https://jsonplaceholder.typicode.com/posts/1');\n    xhr.onload = () => {\n      if (xhr.status === 200) {\n        resolve(JSON.parse(xhr.responseText));\n      } else {\n        reject(new Error(`Request failed with status ${xhr.status}`));\n      }\n    };\n    xhr.onerror = () => reject(new Error('Request failed'));\n    xhr.send();\n  });\n}\n\n// Copy any of these functions and run them in your browser's console!\n// Example usage:\n// fetchData()\n// createPost()\n// updatePost()\n// deletePost()\n// multipleRequests()\n// handleErrors()\n// oldSchoolRequest().then(console.log).catch(console.error)"})]})})]}),(0,n.jsxs)("section",{className:"p-4 bg-white rounded-lg shadow",children:[(0,n.jsx)("h2",{className:"text-xl font-semibold mb-4",children:"Code Examples"}),(0,n.jsxs)("div",{className:"grid gap-4",children:[(0,n.jsxs)("div",{children:[(0,n.jsx)("h3",{className:"font-semibold mb-2",children:"GET Request"}),(0,n.jsx)("pre",{className:"bg-gray-50 p-4 rounded-lg text-sm",children:"axios.get('https://api.example.com/posts/1')\n  .then(response => {\n    console.log(response.data);\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  });"})]}),(0,n.jsxs)("div",{children:[(0,n.jsx)("h3",{className:"font-semibold mb-2",children:"POST Request"}),(0,n.jsx)("pre",{className:"bg-gray-50 p-4 rounded-lg text-sm",children:"axios.post('https://api.example.com/posts', {\n  title: 'New Post',\n  body: 'Content'\n})\n  .then(response => {\n    console.log(response.data);\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  });"})]}),(0,n.jsxs)("div",{children:[(0,n.jsx)("h3",{className:"font-semibold mb-2",children:"Async/Await with Error Handling"}),(0,n.jsx)("pre",{className:"bg-gray-50 p-4 rounded-lg text-sm",children:"async function fetchData() {\n  try {\n    const response = await axios.get('https://api.example.com/posts/1');\n    const comments = await axios.get(`/posts/${response.data.id}/comments`);\n    return { post: response.data, comments: comments.data };\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n}"})]})]})]})]})]})}},9202:(e,s,t)=>{Promise.resolve().then(t.bind(t,784))}},e=>{var s=s=>e(e.s=s);e.O(0,[464,441,684,358],()=>s(9202)),_N_E=e.O()}]);